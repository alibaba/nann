location @challenge {
    default_type  "text/html; charset=UTF-8";
    content_by_lua '
        local m = tmd4_loc
        m.do_auto_cc()
    ';
}

location @cc {

    content_by_lua '
        local ip = ngx.var.tmd_remote_address
        local salt = "ZEvotdUzDg63gnuzrUBn"
        local sign_ip = string.format("%s%s", ip, salt);
        local owner = ngx.var.tmd_owner;

        local m = tmd4_loc
        local ret = m.do_action(nil);

        -- close request if ret is 1
        if ret == 1 then
            ngx.exit(ngx.HTTP_OK)
        end

        if owner == nil then
            owner = ""
        end

        sign_ip = ngx.md5(sign_ip)

        local redirect_loc = m.sm_cc_url(ip, sign_ip, owner);

        ngx.redirect(redirect_loc)
    ';
}

location @wait {

    content_by_lua '
        local m = tmd4_loc
        local redirect_loc = m.wait_url();

        m.do_action(redirect_loc);
    ';
}

location @punish {

    content_by_lua '
        local m = tmd4_loc
        local redirect_loc = m.punish_url();

        m.do_action(redirect_loc);
    ';
}

location @tmall_post_wait {

    rewrite_by_lua '
        local m = tmd4_loc
        local ret = m.do_action(nil);

        -- close request if ret is 1
        if ret == 1 then
            ngx.exit(ngx.HTTP_OK)
        end
    ';

    hourglass_wait_time 15s;
    hourglass_try_times 4;
    hourglass_wait_page_head tmdconf/tmall-wait-head.html;
    hourglass_wait_page_foot tmdconf/tmall-wait-footer.html;
    hourglass_busy_page /hourglass_busy.shtml;
}

location @taobao_post_wait {

    rewrite_by_lua '
        local m = tmd4_loc
        local ret = m.do_action(nil);

        -- close request if ret is 1
        if ret == 1 then
            ngx.exit(ngx.HTTP_OK)
        end
    ';

    hourglass_wait_time 15s;
    hourglass_try_times 4;
    hourglass_wait_page_head tmdconf/taobao-wait-head.html;
    hourglass_wait_page_foot tmdconf/taobao-wait-footer.html;
    hourglass_busy_page /hourglass_busy.shtml;
}

location /hourglass_busy.shtml {
    internal;
    add_header "Cache-Control" "no-cache";
    rewrite ^ http://$tmd_domain/deny.html redirect;
    error_page 405 /hourglass_busy.shtml;
}

location @sysguard_wait {

    content_by_lua '

        local m = tmd4_loc
        local redirect_loc = m.wait_url();

        m.do_action(redirect_loc);
    ';
}

location @login {

    rewrite_by_lua '
        local m = tmd4_loc
        local ret = m.do_action(nil);
        local scheme = ngx.var.scheme

        -- close request if ret is 1
        if ret == 1 then
            ngx.exit(ngx.HTTP_OK)
        end

        if ngx.var.http_X_Client_Scheme == "https" then
            scheme = "https"
        end

        local uri = string.format("%s://%s%s", scheme, ngx.var.host,
        ngx.var.request_uri)

        math.randomseed(tonumber(tostring(os.time()):reverse():sub(1,6)))

        local owner = ngx.var.tmd_owner
        if owner == nil then
            owner = ""
        end

        local v = string.format("%s%.14f", owner, math.random())

        if ngx.var.args == nil or ngx.var.args == "" then
             uri = string.format("%s?smtmd=%s", uri, v)
        else
             uri = string.format("%s&smtmd=%s", uri, v)
        end

        local u = ngx.escape_uri(uri)
        local rwuri = m.sm_login_url(v, u)
        ngx.redirect(rwuri)
    ';
}

location @tmd_entry {
    tmd_action_location;

    content_by_lua '
        dest = ngx.var.tmd_location;

        if dest == nil or dest == "none" then
            ngx.exit(403)
        end

        ngx.exec(dest)
    ';
}